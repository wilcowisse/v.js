var remove = {
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

'ExpressionStatement.expression/CallExpression.callee/*' : ["ThisExpression","FunctionExpression"],
'IfStatement.test/UnaryExpression.operator/*' : ["-","+","typeof","void","delete"],
'IfStatement.test/UnaryExpression.argument/*' : ["NewExpression","Literal"],
'IfStatement.test/BinaryExpression.operator/*' : ["<<",">>",">>>","+","-","*","/","^"],
'IfStatement.test/BinaryExpression.left/*' : ["NewExpression"],
'IfStatement.test/BinaryExpression.right/*' : ["UpdateExpression","NewExpression"],
'IfStatement.test/LogicalExpression.left/*' : ["UpdateExpression"],
'IfStatement.test/LogicalExpression.right/*' : ["ThisExpression","ArrayExpression","ObjectExpression","FunctionExpression","UpdateExpression","NewExpression","Literal"],
'IfStatement.test/MemberExpression.object/*' : ["ArrayExpression","ObjectExpression","FunctionExpression","NewExpression","Literal","BracketExpression"],
'IfStatement.consequent/ExpressionStatement.expression/*' : ["BinaryExpression","LogicalExpression","ConditionalExpression","NewExpression","Identifier","Literal","MemberExpression","BracketExpression"],
'IfStatement.consequent/ReturnStatement.argument/*' : ["UpdateExpression","BracketExpression"],
'ReturnStatement.argument/CallExpression.callee/*' : ["ThisExpression","FunctionExpression"],
'ReturnStatement.argument/CallExpression.arguments/*' : ["AssignmentExpression","UpdateExpression"],
'ForStatement.test/BinaryExpression.operator/*' : ["==","!=","===","!==","<<",">>",">>>","+","-","*","/","%","|","^","&","in","instanceof"],
'ForStatement.test/BinaryExpression.left/*' : ["ThisExpression","UnaryExpression","BinaryExpression","UpdateExpression","NewExpression","CallExpression","Literal","CMemberExpression"],
'ForStatement.test/BinaryExpression.right/*' : ["ThisExpression","UnaryExpression","UpdateExpression","NewExpression"],
'ForStatement.update/UpdateExpression.argument/*' : ["MemberExpression","CMemberExpression"],
'VariableDeclarator.init/ArrayExpression.elements/*' : ["ThisExpression","LogicalExpression","ConditionalExpression","BracketExpression"],
'VariableDeclarator.init/BinaryExpression.operator/*' : ["!=","<","<=",">>>","^","&","instanceof"],
'VariableDeclarator.init/BinaryExpression.left/*' : ["ThisExpression","UpdateExpression","NewExpression"],
'VariableDeclarator.init/BinaryExpression.right/*' : ["ThisExpression","UpdateExpression","NewExpression"],
'VariableDeclarator.init/CallExpression.callee/*' : ["ThisExpression"],
'VariableDeclarator.init/CallExpression.arguments/*' : ["UpdateExpression"],
'VariableDeclarator.init/MemberExpression.object/*' : ["ObjectExpression","FunctionExpression","NewExpression","Literal","BracketExpression"],
'VariableDeclarator.init/CMemberExpression.object/*' : ["ArrayExpression","ObjectExpression","BracketExpression"],
'VariableDeclarator.init/CMemberExpression.property/*' : ["AssignmentExpression","LogicalExpression","ConditionalExpression","BracketExpression"],
'Property.value/ArrayExpression.elements/*' : ["ThisExpression","LogicalExpression","ConditionalExpression","BracketExpression"],
'Property.value/MemberExpression.object/*' : ["ArrayExpression","ObjectExpression","FunctionExpression","Literal","BracketExpression"],
'UnaryExpression.argument/MemberExpression.object/*' : ["ArrayExpression","ObjectExpression","FunctionExpression","NewExpression","Literal","BracketExpression"],
'BinaryExpression.left/UnaryExpression.operator/*' : ["delete"],
'BinaryExpression.left/UnaryExpression.argument/*' : ["UpdateExpression"],
'BinaryExpression.left/BinaryExpression.operator/*' : ["==","!=","===","!==","<","<=",">",">=","in","instanceof"],
'BinaryExpression.left/BinaryExpression.left/*' : ["ThisExpression","UpdateExpression","NewExpression"],
'BinaryExpression.left/BinaryExpression.right/*' : ["ThisExpression","UpdateExpression","NewExpression"],
'BinaryExpression.left/CallExpression.callee/*' : ["ThisExpression","FunctionExpression","CallExpression","CMemberExpression","BracketExpression"],
'BinaryExpression.left/CallExpression.arguments/*' : ["ArrayExpression","ObjectExpression","FunctionExpression","AssignmentExpression","UpdateExpression","LogicalExpression","ConditionalExpression","NewExpression","BracketExpression"],
'BinaryExpression.left/MemberExpression.object/*' : ["ArrayExpression","ObjectExpression","FunctionExpression","NewExpression"],
'BinaryExpression.left/CMemberExpression.object/*' : ["ArrayExpression","ObjectExpression","BracketExpression"],
'BinaryExpression.left/CMemberExpression.property/*' : ["AssignmentExpression","UpdateExpression","LogicalExpression","ConditionalExpression","CallExpression","BracketExpression"],
'BinaryExpression.right/CallExpression.callee/*' : ["ThisExpression","FunctionExpression","CallExpression","CMemberExpression","BracketExpression"],
'BinaryExpression.right/CallExpression.arguments/*' : ["ArrayExpression","AssignmentExpression","UpdateExpression","ConditionalExpression","NewExpression","BracketExpression"],
'BinaryExpression.right/MemberExpression.object/*' : ["ArrayExpression","ObjectExpression","FunctionExpression","NewExpression","BracketExpression"],
'AssignmentExpression.left/MemberExpression.object/*' : ["ArrayExpression","ObjectExpression","FunctionExpression","NewExpression","Literal","BracketExpression"],
'AssignmentExpression.left/CMemberExpression.object/*' : ["ArrayExpression","ObjectExpression","CallExpression","BracketExpression"],
'AssignmentExpression.left/CMemberExpression.property/*' : ["AssignmentExpression","ConditionalExpression"],
'AssignmentExpression.right/BinaryExpression.operator/*' : ["!=","<","<=",">",">=","in","instanceof"],
'AssignmentExpression.right/BinaryExpression.left/*' : ["ThisExpression","UpdateExpression","NewExpression"],
'AssignmentExpression.right/BinaryExpression.right/*' : ["ThisExpression","UpdateExpression","NewExpression"],
'AssignmentExpression.right/CallExpression.callee/*' : ["ThisExpression"],
'AssignmentExpression.right/MemberExpression.object/*' : ["ArrayExpression","ObjectExpression","FunctionExpression","NewExpression","Literal","BracketExpression"],
'AssignmentExpression.right/CMemberExpression.object/*' : ["ArrayExpression","ObjectExpression","BracketExpression"],
'AssignmentExpression.right/CMemberExpression.property/*' : ["AssignmentExpression","LogicalExpression","ConditionalExpression","BracketExpression"],
'LogicalExpression.left/BinaryExpression.operator/*' : ["<<",">>",">>>","+","-","*","/","%","|","^","&"],
'LogicalExpression.left/BinaryExpression.left/*' : ["ThisExpression","UpdateExpression","NewExpression"],
'LogicalExpression.left/BinaryExpression.right/*' : ["ThisExpression","UpdateExpression","NewExpression","BracketExpression"],
'LogicalExpression.left/MemberExpression.object/*' : ["ObjectExpression","FunctionExpression","NewExpression","Literal"],
'LogicalExpression.right/BinaryExpression.operator/*' : ["<<",">>",">>>","-","/","%","|","^","&"],
'LogicalExpression.right/BinaryExpression.left/*' : ["ThisExpression","NewExpression"],
'LogicalExpression.right/BinaryExpression.right/*' : ["ThisExpression","UpdateExpression","NewExpression"],
'CallExpression.callee/MemberExpression.object/*' : ["ObjectExpression"],
'CallExpression.arguments/BinaryExpression.operator/*' : ["!=","<","<=",">",">=","<<",">>",">>>","^","in"],
'CallExpression.arguments/BinaryExpression.left/*' : ["ThisExpression","UpdateExpression","NewExpression"],
'CallExpression.arguments/BinaryExpression.right/*' : ["ThisExpression","UpdateExpression","NewExpression"],
'CallExpression.arguments/CallExpression.callee/*' : ["ThisExpression","FunctionExpression"],
'CallExpression.arguments/CallExpression.arguments/*' : ["AssignmentExpression","BracketExpression"],
'CallExpression.arguments/MemberExpression.object/*' : ["ArrayExpression","ObjectExpression","FunctionExpression","NewExpression"],
'CallExpression.arguments/CMemberExpression.object/*' : ["ArrayExpression","ObjectExpression","BracketExpression"],
'CallExpression.arguments/CMemberExpression.property/*' : ["AssignmentExpression","LogicalExpression","ConditionalExpression","BracketExpression"],
'MemberExpression.object/CallExpression.callee/*' : ["ThisExpression","FunctionExpression","BracketExpression"],
'MemberExpression.object/CallExpression.arguments/*' : ["AssignmentExpression","UpdateExpression","BracketExpression"],
'MemberExpression.object/MemberExpression.object/*' : ["ObjectExpression","FunctionExpression","NewExpression"],
'MemberExpression.object/CMemberExpression.object/*' : ["ArrayExpression","ObjectExpression","BracketExpression"],
'MemberExpression.object/CMemberExpression.property/*' : ["AssignmentExpression","LogicalExpression","ConditionalExpression","BracketExpression"],
'CMemberExpression.object/MemberExpression.object/*' : ["ArrayExpression","ObjectExpression","FunctionExpression","NewExpression","CallExpression","Literal","BracketExpression"],

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
}

if (typeof module !== "undefined" && typeof module.exports !== "undefined") {
    module.exports = remove;
}
